{"version":3,"sources":["Nav.js","localaxios.js","Request.js","Banner.js","Row.js","css/HomeScreen.js","features/userSlice.js","firebase.js","SignUp.js","login.js","App.js","app/store.js","index.js"],"names":["Nav","useState","handleShow","transitionNavbar","window","scrollY","useEffect","addEventListener","removeEventListener","className","src","onClick","firebase","auth","signOut","instance","axios","create","baseURL","API_KEY","userrequests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","movie","setMovie","a","get","request","data","results","Math","floor","random","length","fetchData","style","backgroundImage","backdrop_path","backgroundPosition","backgroundSize","title","origital_name","name","overview","Row","isLargeRow","fetchURL","movies","map","poster_path","keys","id","HomeScreen","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","SignUp","emailRef","useRef","passwordRef","ref","type","placeholder","e","preventDefault","signInWithEmailAndPassword","current","value","then","authUser","console","log","catch","error","alert","message","createUserWithEmailAndPassword","Login","signIn","SetSignIn","App","useSelector","dispatch","useDispatch","unsubscribe","onAuthStateChanged","uid","email","store","configureStore","reducer","userReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf2a050b.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport firebase from 'firebase'\r\nimport\"./css/Nav.css\"\r\n\r\n \r\nfunction Nav() {\r\n    const[show, handleShow] =useState(false);\r\n const transitionNavbar=()=>{\r\n        if(window.scrollY>100)\r\n        {\r\n            handleShow(true)\r\n        }else{\r\n            handleShow(false)\r\n        }\r\n }\r\n useEffect(() => {\r\n     window.addEventListener(\"scroll\", transitionNavbar)\r\n     return ()=>{\r\n         window.removeEventListener(\"scroll\", transitionNavbar)\r\n     }\r\n     \r\n }, [])\r\n    return (\r\n        <div className={'nav $(show && \"nav_black\")'}>\r\n           <div className=\"nav_content\">\r\n               <img src=\"https://image.tmdb.org/t/p/original/wwemzKWzjKYJFfCeiB57q3r4Bcm.svg\" className=\"logo\"/>\r\n               <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n               onClick={()=>firebase.auth().signOut()} className=\"nav_avatar\"/>\r\n               </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import axios from \"axios\"\r\n\r\nconst instance=axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3/\"\r\n       \r\n    })\r\n    export default instance;","const API_KEY = \"0d618f75a5a9765f332a28e06afc3c02\";\r\n\r\nconst userrequests = {\r\n    fetchTrending : `/trending/all/week?api_key=${API_KEY}&languages=en-US`,\r\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&languages=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n}\r\n\r\nexport default userrequests","import axios from './localaxios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport \"./css/banner.css\"\r\nimport userrequests from './Request'\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([])\r\n\r\n    useEffect(()=>{\r\n            async function fetchData() {\r\n                const request = await axios.get(userrequests.fetchNetflixOriginals);\r\n                //console.log(request.data.results[0])\r\n                setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length-1)])\r\n\r\n            }\r\n\r\n            fetchData();\r\n    },[])\r\n    return (\r\n        <div className=\"banner\" style={{backgroundImage:`url('https://image.tmdb.org/t/p/original/${movie?.backdrop_path}')`, \r\n        backgroundPosition:'center', backgroundSize:'cover' }}>\r\n            <div className=\"banner_content\">\r\n                <h1 className=\"banner_title\">\r\n                    {movie?.title || movie?.origital_name||  movie?.name}\r\n                </h1>\r\n\r\n                <div className=\"banner_buttons\">\r\n                    <button>Play</button>\r\n                    <button>My List</button>\r\n                </div>\r\n\r\n                <div className=\"banner_description\">\r\n                    <p>\r\n                    {movie?.overview}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"banner_fade\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;","import React,{useState, useEffect} from 'react'\r\nimport \"./css/row.css\"\r\nimport axios from './localaxios';\r\nfunction Row({title,isLargeRow ,fetchURL}) {\r\n    const[movies,setMovie]=useState([])\r\n\r\n     const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n     useEffect(() => {\r\n        async function fetchData(){\r\n            const request= await axios.get(fetchURL);\r\n\r\n            setMovie(request.data.results)\r\n            return request\r\n        }\r\n        fetchData();\r\n     }, [fetchURL])\r\n    return (\r\n        <div className=\"row\">\r\n          <h2>{title}</h2> \r\n          <div className=\"row_posters\">\r\n              {\r\n                  movies.map(movie=>\r\n                    {\r\n                        return <img src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n                        className= {`rowposter ${isLargeRow && \"largeImage\"} `} keys={movie.id}/>\r\n                    })\r\n              }\r\n              \r\n             </div> \r\n\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react'\r\nimport\"./homescreen.css\"\r\nimport Nav from '../Nav';\r\nimport Banner from '../Banner';\r\nimport Row from '../Row';\r\nimport userrequests from '../Request';\r\nfunction HomeScreen() {\r\n    return (\r\n        <div className=\"homescreen\">\r\n          <Nav/>\r\n          <Banner/>\r\n\r\n          <Row  title=\"Netflix Originals\" isLargeRow fetchURL={userrequests.fetchNetflixOriginals}/>\r\n          <Row title=\"Trending Now\" fetchURL={userrequests.fetchTrending}/>\r\n          <Row title=\"Top Rated\" fetchURL={userrequests.fetchTopRated}/>\r\n          <Row title=\"Action Movies\" fetchURL={userrequests.fetchActionMovies}/>\r\n          <Row title=\"Comedy Movies\" fetchURL={userrequests.fetchComedyMovies}/>\r\n          <Row title=\"Horror Movies\" fetchURL={userrequests.fetchHorrorMovies}/>\r\n          <Row title=\"Romantic Movies\" fetchURL={userrequests.fetchRomanceMovies}/>\r\n          <Row title=\"Documentaries\" fetchURL={userrequests.fetchDocumentaries}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState:{\r\n    user:null\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n       state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  \r\n    },\r\n  })\r\n\r\n  export const {login,logout}= userSlice.actions;\r\n export const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer","import firebase from \"firebase\"\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD8hiU1EK7Yq-GXnAMIx41b0IOfoN4bvj4\",\r\n    authDomain: \"netflix-clone-yt-b9e67.firebaseapp.com\",\r\n    projectId: \"netflix-clone-yt-b9e67\",\r\n    storageBucket: \"netflix-clone-yt-b9e67.appspot.com\",\r\n    messagingSenderId: \"983163509215\",\r\n    appId: \"1:983163509215:web:855533674dd20c082c0c6a\"\r\n  }\r\n\r\n  const firebaseApp=firebase.initializeApp(firebaseConfig);\r\n\r\n  const auth= firebase.auth();\r\n\r\n  export{auth}","import React,{useRef} from 'react'\r\nimport \"./css/login.css\";\r\nimport { auth } from './firebase';\r\nfunction SignUp() {\r\n    const emailRef=useRef(null)\r\n    const passwordRef=useRef(null)\r\n    const register=(e)=>{\r\n        e.preventDefault();\r\n        alert(emailRef.current.value)\r\n         auth.createUserWithEmailAndPassword(emailRef.current.value,\r\n            passwordRef.current.value\r\n            ).then(authUser=>{\r\n                console.log(authUser)\r\n            }).catch(error=>{\r\n                alert(error.message)\r\n            })\r\n    }\r\n    const signIn=(e)=>{\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword (\r\n            emailRef.current.value,\r\n            passwordRef.current.value\r\n        ).then(authUser=>{\r\n            console.log(authUser)\r\n        }).catch(error=>{\r\n            alert(error.message)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"signUpScreen\">\r\n            <form>\r\n                <h1>Sign In</h1>\r\n                <input ref={emailRef} type=\"email\" placeholder=\"Email\"/>\r\n                <input ref={passwordRef} type=\"password\" placeholder=\"Password\"/>\r\n                <button onClick={signIn}>Sign In</button>\r\n                <h4>New to Netflix <span onClick={register}>Sign Up Now.</span></h4>\r\n                </form>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;\r\n","import React,{useState} from 'react'\r\nimport \"./css/login.css\";\r\nimport SignUp from './SignUp';\r\nfunction Login() {\r\n    const [signIn,SetSignIn] = useState(false);\r\n    return (\r\n        \r\n        <div className=\"login\">\r\n           <div className=\"login_header\">\r\n               <img src=\"http://1000logos.net/wp-content/uploads/2017/05/Netflix-Logo.png\" className=\"login_logo\"/>\r\n               \r\n               <button className=\"login_button\">\r\n                  Sign In \r\n               </button>\r\n               \r\n               </div> \r\n               <div className=\"login_body\">\r\n                   {\r\n                       signIn ? (<SignUp/>):(\r\n                           <>\r\n                           <h1>Unlimited films, Tv programmes and more.</h1>\r\n               <h2>Watch AnyWhere,Cancel at any time.</h2>\r\n               <h3>Ready to watch? Enter your email to create or restart your membership.</h3>\r\n               <form className=\"login_form\">\r\n                   <input type=\"text\" placeholder=\"Email Address\"/>\r\n                   <button onClick={()=>SetSignIn(true)}>Get Started</button>\r\n               </form>\r\n         \r\n               \r\n                        </>        \r\n                       )\r\n                   }\r\n                   </div>\r\n               <div className=\"login_gradient\">\r\n\r\n               </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React,{useEffect} from 'react';\nimport { useSelector,useDispatch  } from 'react-redux';\nimport './App.css';\nimport HomeScreen from './css/HomeScreen';\nimport { login, logout, selectUser } from './features/userSlice';\nimport { auth } from './firebase';\nimport Login from './login';\n\nfunction App() {\n  const user=useSelector(selectUser);\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const unsubscribe =auth.onAuthStateChanged(user=>{\n      if(user){\n        dispatch(login({\n          uid:user.uid,\n          email:user.email\n        }))\n      }else{\n        dispatch(logout)\n      }\n    })\n    return unsubscribe;\n  }, [])\n  return (\n    <div className=\"App\">\n      {\n        !user ?(<Login/>):\n        (<HomeScreen/>)\n      }\n     \n    </div>\n  );\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    \n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}